# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/openpana
pkgincludedir = $(includedir)/openpana
pkglibdir = $(libdir)/openpana
pkglibexecdir = $(libexecdir)/openpana
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = openpaa$(EXEEXT) openpac$(EXEEXT) openpre$(EXEEXT) \
	mota$(EXEEXT) mota2$(EXEEXT) client$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sysconfdir)"
PROGRAMS = $(bin_PROGRAMS)
am_client_OBJECTS = client-client.$(OBJEXT) client-nethelper.$(OBJEXT)
client_OBJECTS = $(am_client_OBJECTS)
client_DEPENDENCIES = cantcoap-master/libcantcoap.a
client_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(client_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mota_OBJECTS = mota-mota.$(OBJEXT) mota-session.$(OBJEXT) \
	mota-statemachine.$(OBJEXT) mota-pacmachine.$(OBJEXT) \
	mota-prf_plus.$(OBJEXT) mota-panamessages.$(OBJEXT) \
	mota-lalarm.$(OBJEXT) mota-panautils.$(OBJEXT) \
	mota-loadconfig.$(OBJEXT) mota-aes.$(OBJEXT) \
	mota-cmac.$(OBJEXT)
mota_OBJECTS = $(am_mota_OBJECTS)
mota_DEPENDENCIES = libeapstack/libeap.a libcoap-4.1.1/libcoap.a
mota_LINK = $(CCLD) $(mota_CFLAGS) $(CFLAGS) $(mota_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mota2_OBJECTS = mota2-mota2.$(OBJEXT) mota2-eap-peer.$(OBJEXT) \
	mota2-eap-psk.$(OBJEXT) mota2-aes.$(OBJEXT) \
	mota2-eax.$(OBJEXT)
mota2_OBJECTS = $(am_mota2_OBJECTS)
mota2_DEPENDENCIES = libcoap-4.1.1/libcoap.a
mota2_LINK = $(CCLD) $(mota2_CFLAGS) $(CFLAGS) $(mota2_LDFLAGS) \
	$(LDFLAGS) -o $@
am_openpaa_OBJECTS = openpaa-session.$(OBJEXT) \
	openpaa-statemachine.$(OBJEXT) openpaa-paamachine.$(OBJEXT) \
	openpaa-coap_eap_session.$(OBJEXT) openpaa-prf_plus.$(OBJEXT) \
	openpaa-panamessages.$(OBJEXT) openpaa-lalarm.$(OBJEXT) \
	openpaa-panautils.$(OBJEXT) openpaa-mainserver.$(OBJEXT) \
	openpaa-loadconfig.$(OBJEXT) openpaa-aes.$(OBJEXT) \
	openpaa-cmac.$(OBJEXT)
openpaa_OBJECTS = $(am_openpaa_OBJECTS)
openpaa_DEPENDENCIES = libeapstack/libeap.a libcoap-4.1.1/libcoap.a
openpaa_LINK = $(CCLD) $(openpaa_CFLAGS) $(CFLAGS) $(openpaa_LDFLAGS) \
	$(LDFLAGS) -o $@
am_openpac_OBJECTS = openpac-session.$(OBJEXT) \
	openpac-statemachine.$(OBJEXT) openpac-pacmachine.$(OBJEXT) \
	openpac-prf_plus.$(OBJEXT) openpac-panamessages.$(OBJEXT) \
	openpac-lalarm.$(OBJEXT) openpac-panautils.$(OBJEXT) \
	openpac-mainclient.$(OBJEXT) openpac-loadconfig.$(OBJEXT) \
	openpac-aes.$(OBJEXT) openpac-cmac.$(OBJEXT)
openpac_OBJECTS = $(am_openpac_OBJECTS)
openpac_DEPENDENCIES = libeapstack/libeap.a libcoap-4.1.1/libcoap.a
openpac_LINK = $(CCLD) $(openpac_CFLAGS) $(CFLAGS) $(openpac_LDFLAGS) \
	$(LDFLAGS) -o $@
am_openpre_OBJECTS = openpre-mainpre.$(OBJEXT) \
	openpre-loadconfig.$(OBJEXT) openpre-panautils.$(OBJEXT) \
	openpre-panamessages.$(OBJEXT)
openpre_OBJECTS = $(am_openpre_OBJECTS)
openpre_LDADD = $(LDADD)
openpre_LINK = $(CCLD) $(openpre_CFLAGS) $(CFLAGS) $(openpre_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(client_SOURCES) $(mota_SOURCES) $(mota2_SOURCES) \
	$(openpaa_SOURCES) $(openpac_SOURCES) $(openpre_SOURCES)
DIST_SOURCES = $(client_SOURCES) $(mota_SOURCES) $(mota2_SOURCES) \
	$(openpaa_SOURCES) $(openpac_SOURCES) $(openpre_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(sysconf_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/user/openpana-coap/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_CFLAGS =   -D WITH_POSIX -g -Os -ffunction-sections -fdata-sections 
AM_CPPFLAGS =   -L./state_machines -L./libeapstack -L./libcoap-4.1.1 -I/usr/include/libxml2  -D CONFIGDIR=\"$(sysconfdir)\" ## Sets the \
	config dir
AUTOCONF = ${SHELL} /home/user/openpana-coap/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/user/openpana-coap/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/user/openpana-coap/config/missing --run automake-1.11
AWK = mawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -std=gnu99 -E
CPPFLAGS = 
CXX = clang++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DBG_LINKOPT =  -Wl 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN_PAPER_SIZE = 
DX_CONFIG = doxygen.cfg
DX_DOCDIR = doc
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='OpenPANA' DOCDIR='doc' VERSION='0.2.4' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_DX_CURRENT_FEATURE = 
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = OpenPANA
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lxml2 -lcrypto -lpthread 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/user/openpana-coap/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = openpana
PACKAGE_BUGREPORT = openpana-users@lists.sourceforge.net
PACKAGE_NAME = OpenPANA
PACKAGE_STRING = OpenPANA 0.2.4
PACKAGE_TARNAME = openpana
PACKAGE_URL = http://openpana.sf.net
PACKAGE_VERSION = 0.2.4
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.2.4
abs_builddir = /home/user/openpana-coap/src
abs_srcdir = /home/user/openpana-coap/src
abs_top_builddir = /home/user/openpana-coap
abs_top_srcdir = /home/user/openpana-coap
ac_ct_CC = gcc
ac_ct_CXX = clang++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/user/openpana-coap/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/libcoap-4.1.1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
WPA_SRC = $(srcdir)/wpa_supplicant/src
# Rafa: Añadido este opción de compilación #
COAP_SRC = $(srcdir)/libcoap-4.1.1
############################################
INCLUDES = -I$(WPA_SRC) -I$(WPA_SRC)/utils -I$(COAP_SRC)
AM_CXX = clang++
AM_CXXFLAGS = -Wall -DDEBUG -std=c++11 

### source declarations ###
openpaa_SOURCES = state_machines/session.c \
				state_machines/statemachine.c \
				state_machines/paamachine.c \
				state_machines/coap_eap_session.c \
 				prf_plus.c \
				panamessages.c \
				lalarm.c \
				panautils.c \
				mainserver.c \
				loadconfig.c \
				aes.c \
				cmac.c

openpaa_CPPFLAGS = $(AM_CPPFLAGS) 
openpaa_CFLAGS = $(AM_CFLAGS) -DISSERVER
openpaa_LDFLAGS = $(DBG_LINKOPT)

### library dependencies ###
openpaa_LDADD = libeapstack/libeap.a \
				    libcoap-4.1.1/libcoap.a	


### source declarations ###
openpac_SOURCES = state_machines/session.c \
				state_machines/statemachine.c \
				state_machines/pacmachine.c \
				prf_plus.c \
				panamessages.c \
				lalarm.c \
				panautils.c \
				mainclient.c \
				loadconfig.c \
				aes.c \
				cmac.c

openpac_CPPFLAGS = $(AM_CPPFLAGS)
openpac_CFLAGS = $(AM_CFLAGS) -DISCLIENT
openpac_LDFLAGS = $(DBG_LINKOPT)
### library dependencies ###
openpac_LDADD = libeapstack/libeap.a \
				    libcoap-4.1.1/libcoap.a


### source declarations ###
openpre_SOURCES = mainpre.c \
				loadconfig.c \
				panautils.c \
				panamessages.c

openpre_CPPFLAGS = $(AM_CPPFLAGS) 
openpre_CFLAGS = $(AM_CFLAGS) -DISPRE
openpre_LDFLAGS = $(DBG_LINKOPT)

### source declarations ###
mota_SOURCES = mota.c \
			     state_machines/session.c \
                                state_machines/statemachine.c \
                                state_machines/pacmachine.c \
                                prf_plus.c \
                                panamessages.c \
                                lalarm.c \
                                panautils.c \
                                loadconfig.c \
                                aes.c \
                                cmac.c 

mota_CPPFLAGS = $(AM_CPPFLAGS)
mota_CFLAGS = $(AM_CFLAGS) -DISCLIENT
mota_LDFLAGS = $(DBG_LINKOPT)

### library dependencies ###
mota_LDADD = libeapstack/libeap.a \
                                 libcoap-4.1.1/libcoap.a


### source declarations ###
mota2_SOURCES = mota2.c \
			     panatiki/eap-peer.c \
                             panatiki/eap-psk.c \
                             panatiki/aes.c \
                             panatiki/eax.c

mota2_CPPFLAGS = $(AM_CPPFLAGS)
mota2_CFLAGS = $(AM_CFLAGS) -DISCLIENT
mota2_LDFLAGS = $(DBG_LINKOPT)

### library dependencies ###
mota2_LDADD = libcoap-4.1.1/libcoap.a

### source declarations ###
#mota3_SOURCES               = mota3.cpp \
#			     cantcoap-master/nethelper.c \
#                             panatiki/eap-peer.c \
#                             panatiki/eap-psk.c \
#                             panatiki/aes.c \
#                             panatiki/eax.c

#mota3_CPPFLAGS              = $(AM_CPPFLAGS)
#mota3_CFLAGS                = $(AM_CFLAGS) -DISCLIENT
#mota3_LDFLAGS               = $(DBG_LINKOPT)

### library dependencies ###

#mota3_LDADD                     = cantcoap-master/libcantcoap.a

### source declarations ###
client_SOURCES = client.cpp \
			     cantcoap-master/nethelper.c 

client_CPPFLAGS = $(AM_CPPFLAGS)
client_CFLAGS = $(AM_CFLAGS) -DISCLIENT
client_LDFLAGS = $(DBG_LINKOPT)

### library dependencies ###
client_LDADD = cantcoap-master/libcantcoap.a
EXTRA_DIST = *.h state_machines/*.h config.xml
sysconf_DATA = \
		config.xml 

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
client$(EXEEXT): $(client_OBJECTS) $(client_DEPENDENCIES) $(EXTRA_client_DEPENDENCIES) 
	@rm -f client$(EXEEXT)
	$(client_LINK) $(client_OBJECTS) $(client_LDADD) $(LIBS)
mota$(EXEEXT): $(mota_OBJECTS) $(mota_DEPENDENCIES) $(EXTRA_mota_DEPENDENCIES) 
	@rm -f mota$(EXEEXT)
	$(mota_LINK) $(mota_OBJECTS) $(mota_LDADD) $(LIBS)
mota2$(EXEEXT): $(mota2_OBJECTS) $(mota2_DEPENDENCIES) $(EXTRA_mota2_DEPENDENCIES) 
	@rm -f mota2$(EXEEXT)
	$(mota2_LINK) $(mota2_OBJECTS) $(mota2_LDADD) $(LIBS)
openpaa$(EXEEXT): $(openpaa_OBJECTS) $(openpaa_DEPENDENCIES) $(EXTRA_openpaa_DEPENDENCIES) 
	@rm -f openpaa$(EXEEXT)
	$(openpaa_LINK) $(openpaa_OBJECTS) $(openpaa_LDADD) $(LIBS)
openpac$(EXEEXT): $(openpac_OBJECTS) $(openpac_DEPENDENCIES) $(EXTRA_openpac_DEPENDENCIES) 
	@rm -f openpac$(EXEEXT)
	$(openpac_LINK) $(openpac_OBJECTS) $(openpac_LDADD) $(LIBS)
openpre$(EXEEXT): $(openpre_OBJECTS) $(openpre_DEPENDENCIES) $(EXTRA_openpre_DEPENDENCIES) 
	@rm -f openpre$(EXEEXT)
	$(openpre_LINK) $(openpre_OBJECTS) $(openpre_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/client-client.Po
include ./$(DEPDIR)/client-nethelper.Po
include ./$(DEPDIR)/mota-aes.Po
include ./$(DEPDIR)/mota-cmac.Po
include ./$(DEPDIR)/mota-lalarm.Po
include ./$(DEPDIR)/mota-loadconfig.Po
include ./$(DEPDIR)/mota-mota.Po
include ./$(DEPDIR)/mota-pacmachine.Po
include ./$(DEPDIR)/mota-panamessages.Po
include ./$(DEPDIR)/mota-panautils.Po
include ./$(DEPDIR)/mota-prf_plus.Po
include ./$(DEPDIR)/mota-session.Po
include ./$(DEPDIR)/mota-statemachine.Po
include ./$(DEPDIR)/mota2-aes.Po
include ./$(DEPDIR)/mota2-eap-peer.Po
include ./$(DEPDIR)/mota2-eap-psk.Po
include ./$(DEPDIR)/mota2-eax.Po
include ./$(DEPDIR)/mota2-mota2.Po
include ./$(DEPDIR)/openpaa-aes.Po
include ./$(DEPDIR)/openpaa-cmac.Po
include ./$(DEPDIR)/openpaa-coap_eap_session.Po
include ./$(DEPDIR)/openpaa-lalarm.Po
include ./$(DEPDIR)/openpaa-loadconfig.Po
include ./$(DEPDIR)/openpaa-mainserver.Po
include ./$(DEPDIR)/openpaa-paamachine.Po
include ./$(DEPDIR)/openpaa-panamessages.Po
include ./$(DEPDIR)/openpaa-panautils.Po
include ./$(DEPDIR)/openpaa-prf_plus.Po
include ./$(DEPDIR)/openpaa-session.Po
include ./$(DEPDIR)/openpaa-statemachine.Po
include ./$(DEPDIR)/openpac-aes.Po
include ./$(DEPDIR)/openpac-cmac.Po
include ./$(DEPDIR)/openpac-lalarm.Po
include ./$(DEPDIR)/openpac-loadconfig.Po
include ./$(DEPDIR)/openpac-mainclient.Po
include ./$(DEPDIR)/openpac-pacmachine.Po
include ./$(DEPDIR)/openpac-panamessages.Po
include ./$(DEPDIR)/openpac-panautils.Po
include ./$(DEPDIR)/openpac-prf_plus.Po
include ./$(DEPDIR)/openpac-session.Po
include ./$(DEPDIR)/openpac-statemachine.Po
include ./$(DEPDIR)/openpre-loadconfig.Po
include ./$(DEPDIR)/openpre-mainpre.Po
include ./$(DEPDIR)/openpre-panamessages.Po
include ./$(DEPDIR)/openpre-panautils.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

client-nethelper.o: cantcoap-master/nethelper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(client_CFLAGS) $(CFLAGS) -MT client-nethelper.o -MD -MP -MF $(DEPDIR)/client-nethelper.Tpo -c -o client-nethelper.o `test -f 'cantcoap-master/nethelper.c' || echo '$(srcdir)/'`cantcoap-master/nethelper.c
	$(am__mv) $(DEPDIR)/client-nethelper.Tpo $(DEPDIR)/client-nethelper.Po
#	source='cantcoap-master/nethelper.c' object='client-nethelper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(client_CFLAGS) $(CFLAGS) -c -o client-nethelper.o `test -f 'cantcoap-master/nethelper.c' || echo '$(srcdir)/'`cantcoap-master/nethelper.c

client-nethelper.obj: cantcoap-master/nethelper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(client_CFLAGS) $(CFLAGS) -MT client-nethelper.obj -MD -MP -MF $(DEPDIR)/client-nethelper.Tpo -c -o client-nethelper.obj `if test -f 'cantcoap-master/nethelper.c'; then $(CYGPATH_W) 'cantcoap-master/nethelper.c'; else $(CYGPATH_W) '$(srcdir)/cantcoap-master/nethelper.c'; fi`
	$(am__mv) $(DEPDIR)/client-nethelper.Tpo $(DEPDIR)/client-nethelper.Po
#	source='cantcoap-master/nethelper.c' object='client-nethelper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(client_CFLAGS) $(CFLAGS) -c -o client-nethelper.obj `if test -f 'cantcoap-master/nethelper.c'; then $(CYGPATH_W) 'cantcoap-master/nethelper.c'; else $(CYGPATH_W) '$(srcdir)/cantcoap-master/nethelper.c'; fi`

mota-mota.o: mota.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-mota.o -MD -MP -MF $(DEPDIR)/mota-mota.Tpo -c -o mota-mota.o `test -f 'mota.c' || echo '$(srcdir)/'`mota.c
	$(am__mv) $(DEPDIR)/mota-mota.Tpo $(DEPDIR)/mota-mota.Po
#	source='mota.c' object='mota-mota.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-mota.o `test -f 'mota.c' || echo '$(srcdir)/'`mota.c

mota-mota.obj: mota.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-mota.obj -MD -MP -MF $(DEPDIR)/mota-mota.Tpo -c -o mota-mota.obj `if test -f 'mota.c'; then $(CYGPATH_W) 'mota.c'; else $(CYGPATH_W) '$(srcdir)/mota.c'; fi`
	$(am__mv) $(DEPDIR)/mota-mota.Tpo $(DEPDIR)/mota-mota.Po
#	source='mota.c' object='mota-mota.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-mota.obj `if test -f 'mota.c'; then $(CYGPATH_W) 'mota.c'; else $(CYGPATH_W) '$(srcdir)/mota.c'; fi`

mota-session.o: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-session.o -MD -MP -MF $(DEPDIR)/mota-session.Tpo -c -o mota-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c
	$(am__mv) $(DEPDIR)/mota-session.Tpo $(DEPDIR)/mota-session.Po
#	source='state_machines/session.c' object='mota-session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c

mota-session.obj: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-session.obj -MD -MP -MF $(DEPDIR)/mota-session.Tpo -c -o mota-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`
	$(am__mv) $(DEPDIR)/mota-session.Tpo $(DEPDIR)/mota-session.Po
#	source='state_machines/session.c' object='mota-session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`

mota-statemachine.o: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-statemachine.o -MD -MP -MF $(DEPDIR)/mota-statemachine.Tpo -c -o mota-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c
	$(am__mv) $(DEPDIR)/mota-statemachine.Tpo $(DEPDIR)/mota-statemachine.Po
#	source='state_machines/statemachine.c' object='mota-statemachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c

mota-statemachine.obj: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-statemachine.obj -MD -MP -MF $(DEPDIR)/mota-statemachine.Tpo -c -o mota-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`
	$(am__mv) $(DEPDIR)/mota-statemachine.Tpo $(DEPDIR)/mota-statemachine.Po
#	source='state_machines/statemachine.c' object='mota-statemachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`

mota-pacmachine.o: state_machines/pacmachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-pacmachine.o -MD -MP -MF $(DEPDIR)/mota-pacmachine.Tpo -c -o mota-pacmachine.o `test -f 'state_machines/pacmachine.c' || echo '$(srcdir)/'`state_machines/pacmachine.c
	$(am__mv) $(DEPDIR)/mota-pacmachine.Tpo $(DEPDIR)/mota-pacmachine.Po
#	source='state_machines/pacmachine.c' object='mota-pacmachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-pacmachine.o `test -f 'state_machines/pacmachine.c' || echo '$(srcdir)/'`state_machines/pacmachine.c

mota-pacmachine.obj: state_machines/pacmachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-pacmachine.obj -MD -MP -MF $(DEPDIR)/mota-pacmachine.Tpo -c -o mota-pacmachine.obj `if test -f 'state_machines/pacmachine.c'; then $(CYGPATH_W) 'state_machines/pacmachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/pacmachine.c'; fi`
	$(am__mv) $(DEPDIR)/mota-pacmachine.Tpo $(DEPDIR)/mota-pacmachine.Po
#	source='state_machines/pacmachine.c' object='mota-pacmachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-pacmachine.obj `if test -f 'state_machines/pacmachine.c'; then $(CYGPATH_W) 'state_machines/pacmachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/pacmachine.c'; fi`

mota-prf_plus.o: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-prf_plus.o -MD -MP -MF $(DEPDIR)/mota-prf_plus.Tpo -c -o mota-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c
	$(am__mv) $(DEPDIR)/mota-prf_plus.Tpo $(DEPDIR)/mota-prf_plus.Po
#	source='prf_plus.c' object='mota-prf_plus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c

mota-prf_plus.obj: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-prf_plus.obj -MD -MP -MF $(DEPDIR)/mota-prf_plus.Tpo -c -o mota-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`
	$(am__mv) $(DEPDIR)/mota-prf_plus.Tpo $(DEPDIR)/mota-prf_plus.Po
#	source='prf_plus.c' object='mota-prf_plus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`

mota-panamessages.o: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-panamessages.o -MD -MP -MF $(DEPDIR)/mota-panamessages.Tpo -c -o mota-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c
	$(am__mv) $(DEPDIR)/mota-panamessages.Tpo $(DEPDIR)/mota-panamessages.Po
#	source='panamessages.c' object='mota-panamessages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c

mota-panamessages.obj: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-panamessages.obj -MD -MP -MF $(DEPDIR)/mota-panamessages.Tpo -c -o mota-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`
	$(am__mv) $(DEPDIR)/mota-panamessages.Tpo $(DEPDIR)/mota-panamessages.Po
#	source='panamessages.c' object='mota-panamessages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`

mota-lalarm.o: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-lalarm.o -MD -MP -MF $(DEPDIR)/mota-lalarm.Tpo -c -o mota-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c
	$(am__mv) $(DEPDIR)/mota-lalarm.Tpo $(DEPDIR)/mota-lalarm.Po
#	source='lalarm.c' object='mota-lalarm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c

mota-lalarm.obj: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-lalarm.obj -MD -MP -MF $(DEPDIR)/mota-lalarm.Tpo -c -o mota-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`
	$(am__mv) $(DEPDIR)/mota-lalarm.Tpo $(DEPDIR)/mota-lalarm.Po
#	source='lalarm.c' object='mota-lalarm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`

mota-panautils.o: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-panautils.o -MD -MP -MF $(DEPDIR)/mota-panautils.Tpo -c -o mota-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c
	$(am__mv) $(DEPDIR)/mota-panautils.Tpo $(DEPDIR)/mota-panautils.Po
#	source='panautils.c' object='mota-panautils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c

mota-panautils.obj: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-panautils.obj -MD -MP -MF $(DEPDIR)/mota-panautils.Tpo -c -o mota-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`
	$(am__mv) $(DEPDIR)/mota-panautils.Tpo $(DEPDIR)/mota-panautils.Po
#	source='panautils.c' object='mota-panautils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`

mota-loadconfig.o: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-loadconfig.o -MD -MP -MF $(DEPDIR)/mota-loadconfig.Tpo -c -o mota-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c
	$(am__mv) $(DEPDIR)/mota-loadconfig.Tpo $(DEPDIR)/mota-loadconfig.Po
#	source='loadconfig.c' object='mota-loadconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c

mota-loadconfig.obj: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-loadconfig.obj -MD -MP -MF $(DEPDIR)/mota-loadconfig.Tpo -c -o mota-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`
	$(am__mv) $(DEPDIR)/mota-loadconfig.Tpo $(DEPDIR)/mota-loadconfig.Po
#	source='loadconfig.c' object='mota-loadconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`

mota-aes.o: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-aes.o -MD -MP -MF $(DEPDIR)/mota-aes.Tpo -c -o mota-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c
	$(am__mv) $(DEPDIR)/mota-aes.Tpo $(DEPDIR)/mota-aes.Po
#	source='aes.c' object='mota-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c

mota-aes.obj: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-aes.obj -MD -MP -MF $(DEPDIR)/mota-aes.Tpo -c -o mota-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`
	$(am__mv) $(DEPDIR)/mota-aes.Tpo $(DEPDIR)/mota-aes.Po
#	source='aes.c' object='mota-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`

mota-cmac.o: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-cmac.o -MD -MP -MF $(DEPDIR)/mota-cmac.Tpo -c -o mota-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c
	$(am__mv) $(DEPDIR)/mota-cmac.Tpo $(DEPDIR)/mota-cmac.Po
#	source='cmac.c' object='mota-cmac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c

mota-cmac.obj: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -MT mota-cmac.obj -MD -MP -MF $(DEPDIR)/mota-cmac.Tpo -c -o mota-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`
	$(am__mv) $(DEPDIR)/mota-cmac.Tpo $(DEPDIR)/mota-cmac.Po
#	source='cmac.c' object='mota-cmac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota_CPPFLAGS) $(CPPFLAGS) $(mota_CFLAGS) $(CFLAGS) -c -o mota-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`

mota2-mota2.o: mota2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-mota2.o -MD -MP -MF $(DEPDIR)/mota2-mota2.Tpo -c -o mota2-mota2.o `test -f 'mota2.c' || echo '$(srcdir)/'`mota2.c
	$(am__mv) $(DEPDIR)/mota2-mota2.Tpo $(DEPDIR)/mota2-mota2.Po
#	source='mota2.c' object='mota2-mota2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-mota2.o `test -f 'mota2.c' || echo '$(srcdir)/'`mota2.c

mota2-mota2.obj: mota2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-mota2.obj -MD -MP -MF $(DEPDIR)/mota2-mota2.Tpo -c -o mota2-mota2.obj `if test -f 'mota2.c'; then $(CYGPATH_W) 'mota2.c'; else $(CYGPATH_W) '$(srcdir)/mota2.c'; fi`
	$(am__mv) $(DEPDIR)/mota2-mota2.Tpo $(DEPDIR)/mota2-mota2.Po
#	source='mota2.c' object='mota2-mota2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-mota2.obj `if test -f 'mota2.c'; then $(CYGPATH_W) 'mota2.c'; else $(CYGPATH_W) '$(srcdir)/mota2.c'; fi`

mota2-eap-peer.o: panatiki/eap-peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eap-peer.o -MD -MP -MF $(DEPDIR)/mota2-eap-peer.Tpo -c -o mota2-eap-peer.o `test -f 'panatiki/eap-peer.c' || echo '$(srcdir)/'`panatiki/eap-peer.c
	$(am__mv) $(DEPDIR)/mota2-eap-peer.Tpo $(DEPDIR)/mota2-eap-peer.Po
#	source='panatiki/eap-peer.c' object='mota2-eap-peer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eap-peer.o `test -f 'panatiki/eap-peer.c' || echo '$(srcdir)/'`panatiki/eap-peer.c

mota2-eap-peer.obj: panatiki/eap-peer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eap-peer.obj -MD -MP -MF $(DEPDIR)/mota2-eap-peer.Tpo -c -o mota2-eap-peer.obj `if test -f 'panatiki/eap-peer.c'; then $(CYGPATH_W) 'panatiki/eap-peer.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eap-peer.c'; fi`
	$(am__mv) $(DEPDIR)/mota2-eap-peer.Tpo $(DEPDIR)/mota2-eap-peer.Po
#	source='panatiki/eap-peer.c' object='mota2-eap-peer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eap-peer.obj `if test -f 'panatiki/eap-peer.c'; then $(CYGPATH_W) 'panatiki/eap-peer.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eap-peer.c'; fi`

mota2-eap-psk.o: panatiki/eap-psk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eap-psk.o -MD -MP -MF $(DEPDIR)/mota2-eap-psk.Tpo -c -o mota2-eap-psk.o `test -f 'panatiki/eap-psk.c' || echo '$(srcdir)/'`panatiki/eap-psk.c
	$(am__mv) $(DEPDIR)/mota2-eap-psk.Tpo $(DEPDIR)/mota2-eap-psk.Po
#	source='panatiki/eap-psk.c' object='mota2-eap-psk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eap-psk.o `test -f 'panatiki/eap-psk.c' || echo '$(srcdir)/'`panatiki/eap-psk.c

mota2-eap-psk.obj: panatiki/eap-psk.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eap-psk.obj -MD -MP -MF $(DEPDIR)/mota2-eap-psk.Tpo -c -o mota2-eap-psk.obj `if test -f 'panatiki/eap-psk.c'; then $(CYGPATH_W) 'panatiki/eap-psk.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eap-psk.c'; fi`
	$(am__mv) $(DEPDIR)/mota2-eap-psk.Tpo $(DEPDIR)/mota2-eap-psk.Po
#	source='panatiki/eap-psk.c' object='mota2-eap-psk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eap-psk.obj `if test -f 'panatiki/eap-psk.c'; then $(CYGPATH_W) 'panatiki/eap-psk.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eap-psk.c'; fi`

mota2-aes.o: panatiki/aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-aes.o -MD -MP -MF $(DEPDIR)/mota2-aes.Tpo -c -o mota2-aes.o `test -f 'panatiki/aes.c' || echo '$(srcdir)/'`panatiki/aes.c
	$(am__mv) $(DEPDIR)/mota2-aes.Tpo $(DEPDIR)/mota2-aes.Po
#	source='panatiki/aes.c' object='mota2-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-aes.o `test -f 'panatiki/aes.c' || echo '$(srcdir)/'`panatiki/aes.c

mota2-aes.obj: panatiki/aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-aes.obj -MD -MP -MF $(DEPDIR)/mota2-aes.Tpo -c -o mota2-aes.obj `if test -f 'panatiki/aes.c'; then $(CYGPATH_W) 'panatiki/aes.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/aes.c'; fi`
	$(am__mv) $(DEPDIR)/mota2-aes.Tpo $(DEPDIR)/mota2-aes.Po
#	source='panatiki/aes.c' object='mota2-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-aes.obj `if test -f 'panatiki/aes.c'; then $(CYGPATH_W) 'panatiki/aes.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/aes.c'; fi`

mota2-eax.o: panatiki/eax.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eax.o -MD -MP -MF $(DEPDIR)/mota2-eax.Tpo -c -o mota2-eax.o `test -f 'panatiki/eax.c' || echo '$(srcdir)/'`panatiki/eax.c
	$(am__mv) $(DEPDIR)/mota2-eax.Tpo $(DEPDIR)/mota2-eax.Po
#	source='panatiki/eax.c' object='mota2-eax.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eax.o `test -f 'panatiki/eax.c' || echo '$(srcdir)/'`panatiki/eax.c

mota2-eax.obj: panatiki/eax.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -MT mota2-eax.obj -MD -MP -MF $(DEPDIR)/mota2-eax.Tpo -c -o mota2-eax.obj `if test -f 'panatiki/eax.c'; then $(CYGPATH_W) 'panatiki/eax.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eax.c'; fi`
	$(am__mv) $(DEPDIR)/mota2-eax.Tpo $(DEPDIR)/mota2-eax.Po
#	source='panatiki/eax.c' object='mota2-eax.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mota2_CPPFLAGS) $(CPPFLAGS) $(mota2_CFLAGS) $(CFLAGS) -c -o mota2-eax.obj `if test -f 'panatiki/eax.c'; then $(CYGPATH_W) 'panatiki/eax.c'; else $(CYGPATH_W) '$(srcdir)/panatiki/eax.c'; fi`

openpaa-session.o: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-session.o -MD -MP -MF $(DEPDIR)/openpaa-session.Tpo -c -o openpaa-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c
	$(am__mv) $(DEPDIR)/openpaa-session.Tpo $(DEPDIR)/openpaa-session.Po
#	source='state_machines/session.c' object='openpaa-session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c

openpaa-session.obj: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-session.obj -MD -MP -MF $(DEPDIR)/openpaa-session.Tpo -c -o openpaa-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-session.Tpo $(DEPDIR)/openpaa-session.Po
#	source='state_machines/session.c' object='openpaa-session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`

openpaa-statemachine.o: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-statemachine.o -MD -MP -MF $(DEPDIR)/openpaa-statemachine.Tpo -c -o openpaa-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c
	$(am__mv) $(DEPDIR)/openpaa-statemachine.Tpo $(DEPDIR)/openpaa-statemachine.Po
#	source='state_machines/statemachine.c' object='openpaa-statemachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c

openpaa-statemachine.obj: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-statemachine.obj -MD -MP -MF $(DEPDIR)/openpaa-statemachine.Tpo -c -o openpaa-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-statemachine.Tpo $(DEPDIR)/openpaa-statemachine.Po
#	source='state_machines/statemachine.c' object='openpaa-statemachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`

openpaa-paamachine.o: state_machines/paamachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-paamachine.o -MD -MP -MF $(DEPDIR)/openpaa-paamachine.Tpo -c -o openpaa-paamachine.o `test -f 'state_machines/paamachine.c' || echo '$(srcdir)/'`state_machines/paamachine.c
	$(am__mv) $(DEPDIR)/openpaa-paamachine.Tpo $(DEPDIR)/openpaa-paamachine.Po
#	source='state_machines/paamachine.c' object='openpaa-paamachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-paamachine.o `test -f 'state_machines/paamachine.c' || echo '$(srcdir)/'`state_machines/paamachine.c

openpaa-paamachine.obj: state_machines/paamachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-paamachine.obj -MD -MP -MF $(DEPDIR)/openpaa-paamachine.Tpo -c -o openpaa-paamachine.obj `if test -f 'state_machines/paamachine.c'; then $(CYGPATH_W) 'state_machines/paamachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/paamachine.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-paamachine.Tpo $(DEPDIR)/openpaa-paamachine.Po
#	source='state_machines/paamachine.c' object='openpaa-paamachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-paamachine.obj `if test -f 'state_machines/paamachine.c'; then $(CYGPATH_W) 'state_machines/paamachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/paamachine.c'; fi`

openpaa-coap_eap_session.o: state_machines/coap_eap_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-coap_eap_session.o -MD -MP -MF $(DEPDIR)/openpaa-coap_eap_session.Tpo -c -o openpaa-coap_eap_session.o `test -f 'state_machines/coap_eap_session.c' || echo '$(srcdir)/'`state_machines/coap_eap_session.c
	$(am__mv) $(DEPDIR)/openpaa-coap_eap_session.Tpo $(DEPDIR)/openpaa-coap_eap_session.Po
#	source='state_machines/coap_eap_session.c' object='openpaa-coap_eap_session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-coap_eap_session.o `test -f 'state_machines/coap_eap_session.c' || echo '$(srcdir)/'`state_machines/coap_eap_session.c

openpaa-coap_eap_session.obj: state_machines/coap_eap_session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-coap_eap_session.obj -MD -MP -MF $(DEPDIR)/openpaa-coap_eap_session.Tpo -c -o openpaa-coap_eap_session.obj `if test -f 'state_machines/coap_eap_session.c'; then $(CYGPATH_W) 'state_machines/coap_eap_session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/coap_eap_session.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-coap_eap_session.Tpo $(DEPDIR)/openpaa-coap_eap_session.Po
#	source='state_machines/coap_eap_session.c' object='openpaa-coap_eap_session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-coap_eap_session.obj `if test -f 'state_machines/coap_eap_session.c'; then $(CYGPATH_W) 'state_machines/coap_eap_session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/coap_eap_session.c'; fi`

openpaa-prf_plus.o: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-prf_plus.o -MD -MP -MF $(DEPDIR)/openpaa-prf_plus.Tpo -c -o openpaa-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c
	$(am__mv) $(DEPDIR)/openpaa-prf_plus.Tpo $(DEPDIR)/openpaa-prf_plus.Po
#	source='prf_plus.c' object='openpaa-prf_plus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c

openpaa-prf_plus.obj: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-prf_plus.obj -MD -MP -MF $(DEPDIR)/openpaa-prf_plus.Tpo -c -o openpaa-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-prf_plus.Tpo $(DEPDIR)/openpaa-prf_plus.Po
#	source='prf_plus.c' object='openpaa-prf_plus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`

openpaa-panamessages.o: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-panamessages.o -MD -MP -MF $(DEPDIR)/openpaa-panamessages.Tpo -c -o openpaa-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c
	$(am__mv) $(DEPDIR)/openpaa-panamessages.Tpo $(DEPDIR)/openpaa-panamessages.Po
#	source='panamessages.c' object='openpaa-panamessages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c

openpaa-panamessages.obj: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-panamessages.obj -MD -MP -MF $(DEPDIR)/openpaa-panamessages.Tpo -c -o openpaa-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-panamessages.Tpo $(DEPDIR)/openpaa-panamessages.Po
#	source='panamessages.c' object='openpaa-panamessages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`

openpaa-lalarm.o: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-lalarm.o -MD -MP -MF $(DEPDIR)/openpaa-lalarm.Tpo -c -o openpaa-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c
	$(am__mv) $(DEPDIR)/openpaa-lalarm.Tpo $(DEPDIR)/openpaa-lalarm.Po
#	source='lalarm.c' object='openpaa-lalarm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c

openpaa-lalarm.obj: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-lalarm.obj -MD -MP -MF $(DEPDIR)/openpaa-lalarm.Tpo -c -o openpaa-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-lalarm.Tpo $(DEPDIR)/openpaa-lalarm.Po
#	source='lalarm.c' object='openpaa-lalarm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`

openpaa-panautils.o: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-panautils.o -MD -MP -MF $(DEPDIR)/openpaa-panautils.Tpo -c -o openpaa-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c
	$(am__mv) $(DEPDIR)/openpaa-panautils.Tpo $(DEPDIR)/openpaa-panautils.Po
#	source='panautils.c' object='openpaa-panautils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c

openpaa-panautils.obj: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-panautils.obj -MD -MP -MF $(DEPDIR)/openpaa-panautils.Tpo -c -o openpaa-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-panautils.Tpo $(DEPDIR)/openpaa-panautils.Po
#	source='panautils.c' object='openpaa-panautils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`

openpaa-mainserver.o: mainserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-mainserver.o -MD -MP -MF $(DEPDIR)/openpaa-mainserver.Tpo -c -o openpaa-mainserver.o `test -f 'mainserver.c' || echo '$(srcdir)/'`mainserver.c
	$(am__mv) $(DEPDIR)/openpaa-mainserver.Tpo $(DEPDIR)/openpaa-mainserver.Po
#	source='mainserver.c' object='openpaa-mainserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-mainserver.o `test -f 'mainserver.c' || echo '$(srcdir)/'`mainserver.c

openpaa-mainserver.obj: mainserver.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-mainserver.obj -MD -MP -MF $(DEPDIR)/openpaa-mainserver.Tpo -c -o openpaa-mainserver.obj `if test -f 'mainserver.c'; then $(CYGPATH_W) 'mainserver.c'; else $(CYGPATH_W) '$(srcdir)/mainserver.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-mainserver.Tpo $(DEPDIR)/openpaa-mainserver.Po
#	source='mainserver.c' object='openpaa-mainserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-mainserver.obj `if test -f 'mainserver.c'; then $(CYGPATH_W) 'mainserver.c'; else $(CYGPATH_W) '$(srcdir)/mainserver.c'; fi`

openpaa-loadconfig.o: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-loadconfig.o -MD -MP -MF $(DEPDIR)/openpaa-loadconfig.Tpo -c -o openpaa-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c
	$(am__mv) $(DEPDIR)/openpaa-loadconfig.Tpo $(DEPDIR)/openpaa-loadconfig.Po
#	source='loadconfig.c' object='openpaa-loadconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c

openpaa-loadconfig.obj: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-loadconfig.obj -MD -MP -MF $(DEPDIR)/openpaa-loadconfig.Tpo -c -o openpaa-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-loadconfig.Tpo $(DEPDIR)/openpaa-loadconfig.Po
#	source='loadconfig.c' object='openpaa-loadconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`

openpaa-aes.o: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-aes.o -MD -MP -MF $(DEPDIR)/openpaa-aes.Tpo -c -o openpaa-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c
	$(am__mv) $(DEPDIR)/openpaa-aes.Tpo $(DEPDIR)/openpaa-aes.Po
#	source='aes.c' object='openpaa-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c

openpaa-aes.obj: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-aes.obj -MD -MP -MF $(DEPDIR)/openpaa-aes.Tpo -c -o openpaa-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-aes.Tpo $(DEPDIR)/openpaa-aes.Po
#	source='aes.c' object='openpaa-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`

openpaa-cmac.o: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-cmac.o -MD -MP -MF $(DEPDIR)/openpaa-cmac.Tpo -c -o openpaa-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c
	$(am__mv) $(DEPDIR)/openpaa-cmac.Tpo $(DEPDIR)/openpaa-cmac.Po
#	source='cmac.c' object='openpaa-cmac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c

openpaa-cmac.obj: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -MT openpaa-cmac.obj -MD -MP -MF $(DEPDIR)/openpaa-cmac.Tpo -c -o openpaa-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`
	$(am__mv) $(DEPDIR)/openpaa-cmac.Tpo $(DEPDIR)/openpaa-cmac.Po
#	source='cmac.c' object='openpaa-cmac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpaa_CPPFLAGS) $(CPPFLAGS) $(openpaa_CFLAGS) $(CFLAGS) -c -o openpaa-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`

openpac-session.o: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-session.o -MD -MP -MF $(DEPDIR)/openpac-session.Tpo -c -o openpac-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c
	$(am__mv) $(DEPDIR)/openpac-session.Tpo $(DEPDIR)/openpac-session.Po
#	source='state_machines/session.c' object='openpac-session.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-session.o `test -f 'state_machines/session.c' || echo '$(srcdir)/'`state_machines/session.c

openpac-session.obj: state_machines/session.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-session.obj -MD -MP -MF $(DEPDIR)/openpac-session.Tpo -c -o openpac-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-session.Tpo $(DEPDIR)/openpac-session.Po
#	source='state_machines/session.c' object='openpac-session.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-session.obj `if test -f 'state_machines/session.c'; then $(CYGPATH_W) 'state_machines/session.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/session.c'; fi`

openpac-statemachine.o: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-statemachine.o -MD -MP -MF $(DEPDIR)/openpac-statemachine.Tpo -c -o openpac-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c
	$(am__mv) $(DEPDIR)/openpac-statemachine.Tpo $(DEPDIR)/openpac-statemachine.Po
#	source='state_machines/statemachine.c' object='openpac-statemachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-statemachine.o `test -f 'state_machines/statemachine.c' || echo '$(srcdir)/'`state_machines/statemachine.c

openpac-statemachine.obj: state_machines/statemachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-statemachine.obj -MD -MP -MF $(DEPDIR)/openpac-statemachine.Tpo -c -o openpac-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-statemachine.Tpo $(DEPDIR)/openpac-statemachine.Po
#	source='state_machines/statemachine.c' object='openpac-statemachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-statemachine.obj `if test -f 'state_machines/statemachine.c'; then $(CYGPATH_W) 'state_machines/statemachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/statemachine.c'; fi`

openpac-pacmachine.o: state_machines/pacmachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-pacmachine.o -MD -MP -MF $(DEPDIR)/openpac-pacmachine.Tpo -c -o openpac-pacmachine.o `test -f 'state_machines/pacmachine.c' || echo '$(srcdir)/'`state_machines/pacmachine.c
	$(am__mv) $(DEPDIR)/openpac-pacmachine.Tpo $(DEPDIR)/openpac-pacmachine.Po
#	source='state_machines/pacmachine.c' object='openpac-pacmachine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-pacmachine.o `test -f 'state_machines/pacmachine.c' || echo '$(srcdir)/'`state_machines/pacmachine.c

openpac-pacmachine.obj: state_machines/pacmachine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-pacmachine.obj -MD -MP -MF $(DEPDIR)/openpac-pacmachine.Tpo -c -o openpac-pacmachine.obj `if test -f 'state_machines/pacmachine.c'; then $(CYGPATH_W) 'state_machines/pacmachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/pacmachine.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-pacmachine.Tpo $(DEPDIR)/openpac-pacmachine.Po
#	source='state_machines/pacmachine.c' object='openpac-pacmachine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-pacmachine.obj `if test -f 'state_machines/pacmachine.c'; then $(CYGPATH_W) 'state_machines/pacmachine.c'; else $(CYGPATH_W) '$(srcdir)/state_machines/pacmachine.c'; fi`

openpac-prf_plus.o: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-prf_plus.o -MD -MP -MF $(DEPDIR)/openpac-prf_plus.Tpo -c -o openpac-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c
	$(am__mv) $(DEPDIR)/openpac-prf_plus.Tpo $(DEPDIR)/openpac-prf_plus.Po
#	source='prf_plus.c' object='openpac-prf_plus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-prf_plus.o `test -f 'prf_plus.c' || echo '$(srcdir)/'`prf_plus.c

openpac-prf_plus.obj: prf_plus.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-prf_plus.obj -MD -MP -MF $(DEPDIR)/openpac-prf_plus.Tpo -c -o openpac-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-prf_plus.Tpo $(DEPDIR)/openpac-prf_plus.Po
#	source='prf_plus.c' object='openpac-prf_plus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-prf_plus.obj `if test -f 'prf_plus.c'; then $(CYGPATH_W) 'prf_plus.c'; else $(CYGPATH_W) '$(srcdir)/prf_plus.c'; fi`

openpac-panamessages.o: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-panamessages.o -MD -MP -MF $(DEPDIR)/openpac-panamessages.Tpo -c -o openpac-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c
	$(am__mv) $(DEPDIR)/openpac-panamessages.Tpo $(DEPDIR)/openpac-panamessages.Po
#	source='panamessages.c' object='openpac-panamessages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c

openpac-panamessages.obj: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-panamessages.obj -MD -MP -MF $(DEPDIR)/openpac-panamessages.Tpo -c -o openpac-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-panamessages.Tpo $(DEPDIR)/openpac-panamessages.Po
#	source='panamessages.c' object='openpac-panamessages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`

openpac-lalarm.o: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-lalarm.o -MD -MP -MF $(DEPDIR)/openpac-lalarm.Tpo -c -o openpac-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c
	$(am__mv) $(DEPDIR)/openpac-lalarm.Tpo $(DEPDIR)/openpac-lalarm.Po
#	source='lalarm.c' object='openpac-lalarm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-lalarm.o `test -f 'lalarm.c' || echo '$(srcdir)/'`lalarm.c

openpac-lalarm.obj: lalarm.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-lalarm.obj -MD -MP -MF $(DEPDIR)/openpac-lalarm.Tpo -c -o openpac-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-lalarm.Tpo $(DEPDIR)/openpac-lalarm.Po
#	source='lalarm.c' object='openpac-lalarm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-lalarm.obj `if test -f 'lalarm.c'; then $(CYGPATH_W) 'lalarm.c'; else $(CYGPATH_W) '$(srcdir)/lalarm.c'; fi`

openpac-panautils.o: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-panautils.o -MD -MP -MF $(DEPDIR)/openpac-panautils.Tpo -c -o openpac-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c
	$(am__mv) $(DEPDIR)/openpac-panautils.Tpo $(DEPDIR)/openpac-panautils.Po
#	source='panautils.c' object='openpac-panautils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c

openpac-panautils.obj: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-panautils.obj -MD -MP -MF $(DEPDIR)/openpac-panautils.Tpo -c -o openpac-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-panautils.Tpo $(DEPDIR)/openpac-panautils.Po
#	source='panautils.c' object='openpac-panautils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`

openpac-mainclient.o: mainclient.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-mainclient.o -MD -MP -MF $(DEPDIR)/openpac-mainclient.Tpo -c -o openpac-mainclient.o `test -f 'mainclient.c' || echo '$(srcdir)/'`mainclient.c
	$(am__mv) $(DEPDIR)/openpac-mainclient.Tpo $(DEPDIR)/openpac-mainclient.Po
#	source='mainclient.c' object='openpac-mainclient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-mainclient.o `test -f 'mainclient.c' || echo '$(srcdir)/'`mainclient.c

openpac-mainclient.obj: mainclient.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-mainclient.obj -MD -MP -MF $(DEPDIR)/openpac-mainclient.Tpo -c -o openpac-mainclient.obj `if test -f 'mainclient.c'; then $(CYGPATH_W) 'mainclient.c'; else $(CYGPATH_W) '$(srcdir)/mainclient.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-mainclient.Tpo $(DEPDIR)/openpac-mainclient.Po
#	source='mainclient.c' object='openpac-mainclient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-mainclient.obj `if test -f 'mainclient.c'; then $(CYGPATH_W) 'mainclient.c'; else $(CYGPATH_W) '$(srcdir)/mainclient.c'; fi`

openpac-loadconfig.o: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-loadconfig.o -MD -MP -MF $(DEPDIR)/openpac-loadconfig.Tpo -c -o openpac-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c
	$(am__mv) $(DEPDIR)/openpac-loadconfig.Tpo $(DEPDIR)/openpac-loadconfig.Po
#	source='loadconfig.c' object='openpac-loadconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c

openpac-loadconfig.obj: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-loadconfig.obj -MD -MP -MF $(DEPDIR)/openpac-loadconfig.Tpo -c -o openpac-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-loadconfig.Tpo $(DEPDIR)/openpac-loadconfig.Po
#	source='loadconfig.c' object='openpac-loadconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`

openpac-aes.o: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-aes.o -MD -MP -MF $(DEPDIR)/openpac-aes.Tpo -c -o openpac-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c
	$(am__mv) $(DEPDIR)/openpac-aes.Tpo $(DEPDIR)/openpac-aes.Po
#	source='aes.c' object='openpac-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-aes.o `test -f 'aes.c' || echo '$(srcdir)/'`aes.c

openpac-aes.obj: aes.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-aes.obj -MD -MP -MF $(DEPDIR)/openpac-aes.Tpo -c -o openpac-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-aes.Tpo $(DEPDIR)/openpac-aes.Po
#	source='aes.c' object='openpac-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-aes.obj `if test -f 'aes.c'; then $(CYGPATH_W) 'aes.c'; else $(CYGPATH_W) '$(srcdir)/aes.c'; fi`

openpac-cmac.o: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-cmac.o -MD -MP -MF $(DEPDIR)/openpac-cmac.Tpo -c -o openpac-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c
	$(am__mv) $(DEPDIR)/openpac-cmac.Tpo $(DEPDIR)/openpac-cmac.Po
#	source='cmac.c' object='openpac-cmac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-cmac.o `test -f 'cmac.c' || echo '$(srcdir)/'`cmac.c

openpac-cmac.obj: cmac.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -MT openpac-cmac.obj -MD -MP -MF $(DEPDIR)/openpac-cmac.Tpo -c -o openpac-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`
	$(am__mv) $(DEPDIR)/openpac-cmac.Tpo $(DEPDIR)/openpac-cmac.Po
#	source='cmac.c' object='openpac-cmac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpac_CPPFLAGS) $(CPPFLAGS) $(openpac_CFLAGS) $(CFLAGS) -c -o openpac-cmac.obj `if test -f 'cmac.c'; then $(CYGPATH_W) 'cmac.c'; else $(CYGPATH_W) '$(srcdir)/cmac.c'; fi`

openpre-mainpre.o: mainpre.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-mainpre.o -MD -MP -MF $(DEPDIR)/openpre-mainpre.Tpo -c -o openpre-mainpre.o `test -f 'mainpre.c' || echo '$(srcdir)/'`mainpre.c
	$(am__mv) $(DEPDIR)/openpre-mainpre.Tpo $(DEPDIR)/openpre-mainpre.Po
#	source='mainpre.c' object='openpre-mainpre.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-mainpre.o `test -f 'mainpre.c' || echo '$(srcdir)/'`mainpre.c

openpre-mainpre.obj: mainpre.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-mainpre.obj -MD -MP -MF $(DEPDIR)/openpre-mainpre.Tpo -c -o openpre-mainpre.obj `if test -f 'mainpre.c'; then $(CYGPATH_W) 'mainpre.c'; else $(CYGPATH_W) '$(srcdir)/mainpre.c'; fi`
	$(am__mv) $(DEPDIR)/openpre-mainpre.Tpo $(DEPDIR)/openpre-mainpre.Po
#	source='mainpre.c' object='openpre-mainpre.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-mainpre.obj `if test -f 'mainpre.c'; then $(CYGPATH_W) 'mainpre.c'; else $(CYGPATH_W) '$(srcdir)/mainpre.c'; fi`

openpre-loadconfig.o: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-loadconfig.o -MD -MP -MF $(DEPDIR)/openpre-loadconfig.Tpo -c -o openpre-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c
	$(am__mv) $(DEPDIR)/openpre-loadconfig.Tpo $(DEPDIR)/openpre-loadconfig.Po
#	source='loadconfig.c' object='openpre-loadconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-loadconfig.o `test -f 'loadconfig.c' || echo '$(srcdir)/'`loadconfig.c

openpre-loadconfig.obj: loadconfig.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-loadconfig.obj -MD -MP -MF $(DEPDIR)/openpre-loadconfig.Tpo -c -o openpre-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`
	$(am__mv) $(DEPDIR)/openpre-loadconfig.Tpo $(DEPDIR)/openpre-loadconfig.Po
#	source='loadconfig.c' object='openpre-loadconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-loadconfig.obj `if test -f 'loadconfig.c'; then $(CYGPATH_W) 'loadconfig.c'; else $(CYGPATH_W) '$(srcdir)/loadconfig.c'; fi`

openpre-panautils.o: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-panautils.o -MD -MP -MF $(DEPDIR)/openpre-panautils.Tpo -c -o openpre-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c
	$(am__mv) $(DEPDIR)/openpre-panautils.Tpo $(DEPDIR)/openpre-panautils.Po
#	source='panautils.c' object='openpre-panautils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-panautils.o `test -f 'panautils.c' || echo '$(srcdir)/'`panautils.c

openpre-panautils.obj: panautils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-panautils.obj -MD -MP -MF $(DEPDIR)/openpre-panautils.Tpo -c -o openpre-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`
	$(am__mv) $(DEPDIR)/openpre-panautils.Tpo $(DEPDIR)/openpre-panautils.Po
#	source='panautils.c' object='openpre-panautils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-panautils.obj `if test -f 'panautils.c'; then $(CYGPATH_W) 'panautils.c'; else $(CYGPATH_W) '$(srcdir)/panautils.c'; fi`

openpre-panamessages.o: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-panamessages.o -MD -MP -MF $(DEPDIR)/openpre-panamessages.Tpo -c -o openpre-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c
	$(am__mv) $(DEPDIR)/openpre-panamessages.Tpo $(DEPDIR)/openpre-panamessages.Po
#	source='panamessages.c' object='openpre-panamessages.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-panamessages.o `test -f 'panamessages.c' || echo '$(srcdir)/'`panamessages.c

openpre-panamessages.obj: panamessages.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -MT openpre-panamessages.obj -MD -MP -MF $(DEPDIR)/openpre-panamessages.Tpo -c -o openpre-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`
	$(am__mv) $(DEPDIR)/openpre-panamessages.Tpo $(DEPDIR)/openpre-panamessages.Po
#	source='panamessages.c' object='openpre-panamessages.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openpre_CPPFLAGS) $(CPPFLAGS) $(openpre_CFLAGS) $(CFLAGS) -c -o openpre-panamessages.obj `if test -f 'panamessages.c'; then $(CYGPATH_W) 'panamessages.c'; else $(CYGPATH_W) '$(srcdir)/panamessages.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

client-client.o: client.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT client-client.o -MD -MP -MF $(DEPDIR)/client-client.Tpo -c -o client-client.o `test -f 'client.cpp' || echo '$(srcdir)/'`client.cpp
	$(am__mv) $(DEPDIR)/client-client.Tpo $(DEPDIR)/client-client.Po
#	source='client.cpp' object='client-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o client-client.o `test -f 'client.cpp' || echo '$(srcdir)/'`client.cpp

client-client.obj: client.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT client-client.obj -MD -MP -MF $(DEPDIR)/client-client.Tpo -c -o client-client.obj `if test -f 'client.cpp'; then $(CYGPATH_W) 'client.cpp'; else $(CYGPATH_W) '$(srcdir)/client.cpp'; fi`
	$(am__mv) $(DEPDIR)/client-client.Tpo $(DEPDIR)/client-client.Po
#	source='client.cpp' object='client-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(client_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o client-client.obj `if test -f 'client.cpp'; then $(CYGPATH_W) 'client.cpp'; else $(CYGPATH_W) '$(srcdir)/client.cpp'; fi`
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sysconfdir)" || $(MKDIR_P) "$(DESTDIR)$(sysconfdir)"
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sysconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sysconfdir)" || exit $$?; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sysconfdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sysconfDATA

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-sysconfDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-sysconfDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-sysconfDATA

                             panatiki/eap-peer.c \
                             panatiki/eap-psk.c \
                             panatiki/aes.c \
                             panatiki/eax.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
